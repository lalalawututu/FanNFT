{"ast":null,"code":"import * as constants from './constants';\nimport * as fcl from '@onflow/fcl';\nimport { fromJS } from 'immutable';\nexport const userInfo = user => ({\n  type: constants.USERINFO,\n  value: fromJS(user)\n});\nexport const connectWallet = () => ({\n  type: constants.CONNECTWALLET\n});\nexport const toggleConnectWallet = (event, connectWallet) => {\n  event.preventDefault();\n  return dispatch => {\n    if (connectWallet) {\n      fcl.unauthenticate();\n    } else {\n      fcl.authenticate();\n    }\n\n    dispatch(connectWallet(connectWallet));\n  }; // return async (dispatch) => {\n  //   try {\n  //     let user = fcl.currentUser().subscribe(connectWallet);\n  //     await dispatch(userInfo(user))\n  //   } catch (err) {}\n  // }\n};","map":{"version":3,"sources":["/Users/guoshuying/FanNFT-api/app/src/common/header/store/actionCreators.js"],"names":["constants","fcl","fromJS","userInfo","user","type","USERINFO","value","connectWallet","CONNECTWALLET","toggleConnectWallet","event","preventDefault","dispatch","unauthenticate","authenticate"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,KAAW;AACjCC,EAAAA,IAAI,EAAEL,SAAS,CAACM,QADiB;AAEjCC,EAAAA,KAAK,EAAEL,MAAM,CAACE,IAAD;AAFoB,CAAX,CAAjB;AAKP,OAAO,MAAMI,aAAa,GAAG,OAAO;AAClCH,EAAAA,IAAI,EAAEL,SAAS,CAACS;AADkB,CAAP,CAAtB;AAKP,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAOH,aAAP,KAAyB;AAC1DG,EAAAA,KAAK,CAACC,cAAN;AACA,SAAOC,QAAD,IAAc;AAClB,QAAGL,aAAH,EAAkB;AAChBP,MAAAA,GAAG,CAACa,cAAJ;AACC,KAFH,MAES;AACPb,MAAAA,GAAG,CAACc,YAAJ;AACD;;AACDF,IAAAA,QAAQ,CAACL,aAAa,CAACA,aAAD,CAAd,CAAR;AACD,GAPD,CAF0D,CAU1D;AACA;AACA;AACA;AACA;AACA;AACD,CAhBM","sourcesContent":["import * as constants from './constants';\nimport * as fcl from '@onflow/fcl';\nimport { fromJS } from 'immutable';\n\nexport const userInfo = (user) => ({\n  type: constants.USERINFO,\n  value: fromJS(user)\n});\n\nexport const connectWallet = () => ({\n  type: constants.CONNECTWALLET,\n  \n});\n\nexport const toggleConnectWallet = (event,connectWallet) => {\n  event.preventDefault();\n  return(dispatch) => {\n    if(connectWallet) {\n      fcl.unauthenticate()\n      } else {\n      fcl.authenticate()\n    }\n    dispatch(connectWallet(connectWallet))\n  }\n  // return async (dispatch) => {\n  //   try {\n  //     let user = fcl.currentUser().subscribe(connectWallet);\n  //     await dispatch(userInfo(user))\n  //   } catch (err) {}\n  // }\n};\n\n"]},"metadata":{},"sourceType":"module"}